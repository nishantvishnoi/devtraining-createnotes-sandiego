<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($rootScope,$scope) {
	/* widget controller */
	var c = this;
	$scope.hello = "helloBrother";
	c.selectItem = function(idx) {
		var id = c.data.notes[idx].sys_id;
		console.log('Note ID: ' + id);
		$rootScope.noteID = id;
		$rootScope.$emit('selectNote', id);
	}
	$rootScope.$on('refreshNote', function(event,data) {
		console.log("test data before"+ JSON.stringify(c.data.notes[0]) + "..." + JSON.stringify(c.data.notes[1]));
		c.server.refresh().then(function(r){
			console.log("test data after refresh"+ JSON.stringify(c.data.notes[0]) + "..." + JSON.stringify(c.data.notes[1]));
		});
		/*c.server.update().then(function(r){
			console.log("test data after update"+ JSON.stringify(c.data.notes[0]) + "..." + JSON.stringify(c.data.notes[1]));
		});*/
		/*c.server.get({
			action: 'getNote',
			noteID: $rootScope.refreshNoteID
		}).then(function(r) {
			c.data = r.data;
			console.log("test data after get"+ JSON.stringify(c.data.notes[0]) + "..." + JSON.stringify(c.data.notes[1]));
		});*/
	});
}
]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Notes List</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	//create an array to populate with notes
	//gs.info("hello, notes list widget calling");
	if(input){
		gs.info("hello Notes list, input is sent from client");
	}
	data.notes = [];
	var noteGR = new GlideRecord('x_snc_createnotes_note');
	noteGR.addQuery('user', gs.getUser().getID());
	noteGR.orderByDesc('sys_created_on');
	noteGR.query();
	while (noteGR.next()) {
		var noteObj = {};
		//use service portal helper method to get some display values
		$sp.getRecordDisplayValues(noteObj, noteGR, 'number,title,sys_id');
		//get the first 20 characters of the description
		noteObj.note = noteGR.getValue('note').slice(0,20);
		//push the populated obj into the array
		data.notes.push(noteObj);
	}
	//gs.info("hello, notes list widget end with values" + data.notes[0].title + "..." + data.notes[1].title);
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-13 17:50:45</sys_created_on>
        <sys_id>fd2f6dbc2f7bd1101352235df699b680</sys_id>
        <sys_mod_count>72</sys_mod_count>
        <sys_name>Notes List</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_fd2f6dbc2f7bd1101352235df699b680</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-12-21 16:08:34</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading clearfix">
    <h3 class="panel-title pull-left">
      ${Notes}
    </h3>
  </div>
  <div class="list-group">
    <a class="list-group-item" ng-repeat="note in data.notes" ng-click="c.selectItem($index)">
      <h4 class="list-group-item-heading text-center">
        {{note.title}}
      </h4>
      <p class="list-group-item-text text-center">
        {{note.note}}
      </p>
      <p class="list-group-item-text text-center">
        {{ hello }}
      </p>
    </a>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
